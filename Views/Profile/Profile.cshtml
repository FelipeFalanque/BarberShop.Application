@using BarberShop.Application.Models;
@model UserViewModel

<form method="post">

    @if (!string.IsNullOrEmpty(ViewBag.message))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Sucesso!</strong> Seus dados foram salvos com sucesso!
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @Html.HiddenFor(f => f.Code)
    <div class="mb-3">
        <label for="inputName" class="form-label">Nome</label>
        @Html.TextBoxFor(f => f.Name, new { @class = "form-control", autofocus = "", id = "inputName"})
    </div>
    <div class="mb-3">
        <label for="inputEmail" class="form-label">Email</label>
        @Html.TextBoxFor(f => f.Email, new { @class = "form-control", id = "inputEmail"})
    </div>
    <div class="mb-3">
        <label for="inputPhone" class="form-label">Celular</label>
        @Html.TextBoxFor(f => f.Phone, new { @class = "form-control phone", id = "inputPhone", maxlength="15"})
    </div>
    <div class="mb-3">
        <label for="inputYear" class="form-label">Ano Nascimento</label>
        @Html.TextBoxFor(f => f.YearOfBirth, new { @class = "form-control year", id = "inputYear", maxlength="4"})
    </div>

    <small>
        @Html.ValidationMessageFor(f => f.Name, null, new { @class = "text-danger" })
    </small>
    <small>
        @Html.ValidationMessageFor(f => f.Email, null, new { @class = "text-danger" })
    </small>
    <small>
        @Html.ValidationMessageFor(f => f.Phone, null, new { @class = "text-danger" })
    </small>

    <button type="submit" class="btn btn-success">Salvar</button>
</form>